#!/usr/bin/env python

import sys
import copy
import submit_api
import subprocess

# hsub: Submission script for the Herd Volunteer Computing Project
# lwilson - TACC
# Usage: hsub <launcher_job_file>

if len(sys.argv) <= 1:
  print "Too few args!"
  print "Usage: hsub <launcher_job_file>"
  exit()


# Setup the batch preamble
batch = submit_api.BATCH_DESC()
batch.project = 'http://129.114.6.131/tacctest/'
batch.authenticator = '1f289518a167969cc67523ba7d5ced8a'
batch.app_name = "herd"
batch.batch_name = "testbatch"
batch.jobs = []

job_file=open(sys.argv[1], "r")

job = submit_api.JOB_DESC()
f = submit_api.FILE_DESC()
f.mode = 'remote'
f.url = 'http://isaac.ssl.berkeley.edu/validate_logic.txt'
f.md5 = "eec5a142cea5202c9ab2e4575a8aaaa7"
f.nbytes = 4250
job.files = [f]

for wu in job_file:
  command=wu.split()[0]
  if command == "vina":
    pass 
  job.rsc_fpops_est = 1e9

  job.wu_template="""<input_template>
  <file_info>
  </file_info>
  <workunit>
    <file_ref>
      <open_name>in</open_name>
    </file_ref>
    <command_line><![CDATA[{}]]></command_line>
    <rsc_disk_bound>3000000000.00</rsc_disk_bound>
  </workunit>
</input_template>""".format(wu.rstrip())

  job.result_template="""<output_template>
  <file_info>
    <name><OUTFILE_0/></name>
    <generated_locally/>
    <max_nbytes>50000000</max_nbytes>
    <url><UPLOAD_URL/></url>
  </file_info>
  <result>
    <file_name><OUTFILE_0/></file_name>
    <open_name>out</open_name>
  </result>
</output_template>"""


  batch.jobs.append(copy.copy(job))

r = submit_api.submit_batch(batch)

#print "Batch Submitted"
#print "---------------"
#print "{} work unit(s)".format(len(batch.jobs))
#print "Batch ID: {}".format(r[0].text)
